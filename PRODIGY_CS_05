from scapy.all import sniff
from scapy.layers.inet import IP, TCP, UDP

def packet_callback(packet):
    if IP in packet:
        ip_layer = packet[IP]
        protocol = packet.sprintf('%IP.proto%')
        
        print(f"Source: {ip_layer.src}")
        print(f"Destination: {ip_layer.dst}")
        print(f"Protocol: {protocol}")
        
        if protocol == "TCP":
            tcp_layer = packet[TCP]
            print(f"Source Port: {tcp_layer.sport}")
            print(f"Destination Port: {tcp_layer.dport}")
            print(f"Payload: {str(tcp_layer.payload)}")
        elif protocol == "UDP":
            udp_layer = packet[UDP]
            print(f"Source Port: {udp_layer.sport}")
            print(f"Destination Port: {udp_layer.dport}")
            print(f"Payload: {str(udp_layer.payload)}")

        print("\n")

# Capture packets
sniff(prn=packet_callback, store=0)
